{"ast":null,"code":"var _jsxFileName = \"/Users/brianhuot/coding/listio2/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport Page from '../components/Page';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      const res = await fetch('https://jsonplaceholder.typicode.com/todos/1');\n      const json = await res.json();\n      pageProps = json;\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MyApp; // import App from 'next/app'\n// import Page from '../components/Page'\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     //exposes query to user\n//     pageProps.query = ctx.query\n//     return { pageProps }\n//   }\n//   render() {\n//     const { Component, pageProps } = this.props\n//     return (\n//       <Page>\n//         <Component {...pageProps} />\n//       </Page>\n//     )\n//   }\n// }\n// export default MyApp","map":{"version":3,"sources":["/Users/brianhuot/coding/listio2/pages/_app.js"],"names":["App","Page","MyApp","getInitialProps","Component","ctx","pageProps","res","fetch","json","render","props"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACtB,eAAaG,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7B,YAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAH,MAAAA,SAAS,GAAGG,IAAZ;AACD;;AACD,WAAO;AAAEH,MAAAA;AAAF,KAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKK,KAAtC;AAEA,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAnBqB;;AAsBxB,eAAeJ,KAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import App from 'next/app'\nimport Page from '../components/Page'\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n    if (Component.getInitialProps) {\n      const res = await fetch('https://jsonplaceholder.typicode.com/todos/1')\n      const json = await res.json()\n      pageProps = json\n    }\n    return { pageProps }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props\n\n    return (\n      <Page>\n        <Component {...pageProps} />\n      </Page>\n    )\n  }\n}\n\nexport default MyApp\n\n// import App from 'next/app'\n// import Page from '../components/Page'\n\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     //exposes query to user\n//     pageProps.query = ctx.query\n//     return { pageProps }\n//   }\n\n//   render() {\n//     const { Component, pageProps } = this.props\n\n//     return (\n//       <Page>\n//         <Component {...pageProps} />\n//       </Page>\n//     )\n//   }\n// }\n\n// export default MyApp\n"]},"metadata":{},"sourceType":"module"}